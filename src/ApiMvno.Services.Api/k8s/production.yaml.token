apiVersion: apps/v1 
kind: Deployment
metadata:
  name: $PROJECT_NAME
  namespace: $NAMESPACE
spec:
  replicas: 3
  selector:
    matchLabels:
      app: $PROJECT_NAME
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: $PROJECT_NAME
    spec:
      containers:
      - name: $PROJECT_NAME
        image: $DOCKER_REGISTRY_SERVER/telecall/$PROJECT_NAME:$IMAGE_TAG
        imagePullPolicy: Always
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "400Mi"
            cpu: "350m"
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "$BITBUCKET_DEPLOYMENT_ENVIRONMENT"
        - name: ASPNETCORE_URLS
          value: "http://*:80"
        - name: TZ
          value: "Brazil/East"
        ports:
        - containerPort: 80
        volumeMounts:
        - name: $PROJECT_NAME-appsettings-volume
          mountPath: /app/appsettings.json
          subPath: appsettings.json
        livenessProbe:
          httpGet:
            path: /health/live
            port: 80
            scheme: HTTP
          failureThreshold: 3
          successThreshold: 1
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 30
      volumes:
      - name: $PROJECT_NAME-appsettings-volume
        secret:
          secretName: $PROJECT_NAME-secrets
      imagePullSecrets:
        - name: telecall-repository
    
--- 

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: $PROJECT_NAME
  namespace: $NAMESPACE
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 25m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '120'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '120'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '120'
    nginx.ingress.kubernetes.io/proxy-buffer-size: '128k'
spec:
  rules:
  - host: $HOST_WEBAPI #portabilidade-webapi-sandbox.telecall.com.br
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: $PROJECT_NAME
            port: 
              number: 80
  tls:
  - hosts:
    - $HOST_WEBAPI
    secretName: telecall-certificate              
---

apiVersion: v1
kind: Service
metadata:
  name: $PROJECT_NAME
  namespace: $NAMESPACE
  labels:
    version: latest
spec:
  selector:
    app: $PROJECT_NAME
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
    
---